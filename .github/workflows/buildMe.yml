name: Deploy to AWS

on:
  push:
    branches:
      - deploy2 # Adjust the branch name as needed

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set AWS Region
        run: echo "AWS_REGION=${{ secrets.AWS_REGION }}" >> $GITHUB_ENV

      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure AWS CLI
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region ${{ secrets.AWS_REGION }}

      - name: Authenticate with Amazon ECR
        run: |
          aws ecr-public get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
          
      - name: Build and push Docker image
        run: |
          npm install --include=dev
          npm run build --silent --ignore-optional-checks
          docker build -t my-app .
          docker tag my-app ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY_URI}:obaidlatest
          docker push ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPOSITORY_URI}:obaidlatest
          
            - name: Deploy to EC2
              run: |
                # SSH into your EC2 instance
                ssh -i ${{ secrets.DEPLOYMENT_KEY }} ec2-user@${{ secrets.EC2_INSTANCE_IP }} << EOF
                    
                # Pull the Docker image from your ECR repository
                docker pull ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_URI }}:obaidlatest
                    
                # Run the Docker container
                docker run -d -p 80:80 --name my-app-container ${{ secrets.AWS_ACCOUNT_ID }}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ secrets.ECR_REPOSITORY_URI }}:obaidlatest
                    
                EOF
          
