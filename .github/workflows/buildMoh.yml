name: Docker Image CI

on:
  push:
    branches: ['deploy2']
  pull_request:
    branches: ['deploy2']

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v3

      - name: Set image version (tag)
        id: image_version
        run: echo "gitsha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT

      - name: Login to Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
   
      - name: Build the Docker image
        run: docker build . --file Dockerfile --tag ghcr.io/obaidofj/livechat:${{ steps.image_version.outputs.gitsha }}

      - name: Publish docker image
        run: docker push ghcr.io/obaidofj/livechat:${{ steps.image_version.outputs.gitsha }}

      - name: configure docker host
        uses: khaledez/configure-docker-host@v1 #can be always used
        with:
          host: 13.37.255.46
          user: github
          ssh-private-key: ${{ secrets.DEPLOYMENT_KEY }}

      - name: deploy
        env:
          DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
          DB_NAME: ${{ secrets.DB_NAME }}
          GIT_VERSION: ${{ steps.image_version.outputs.gitsha }}
        run: echo ${{ secrets.DB_NAME }} - ${{ steps.image_version.outputs.gitsha }}# docker compose -f docker-compose-prod.yml up -d

      - name: print logs #This step will be executed even if previous steps fails
        if: always()
        run: docker compose logs
